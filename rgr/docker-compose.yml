services:
  api-service:
    build:
      context: ./api
    deploy:
      mode: replicated
      replicas: 3
    environment:
      ORCHESTRATOR_URL: "http://orchestrator:9000/calculate"
      PORT: 8000
    depends_on:
      - orchestrator
    networks:
      - my-network

  orchestrator:
    build:
      context: ./orchestrator
    environment:
      AMQP_URL: "amqp://myuser:mypassword@rabbitmq:5672/"
      PORT: 9000
      SYNC_PROVIDER_API: "http://sync-provider:8000/format"
    depends_on:
      - queue-provider
      - sync-provider
    networks:
      - my-network

  queue-provider:
    build:
      context: ./queue-provider
    environment:
      AMQP_URL: "amqp://myuser:mypassword@rabbitmq:5672/"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - my-network

  sync-provider:
    build:
      context: ./sync-provider
    environment:
      PORT: 8000
    networks:
      - my-network

  load-balancer:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - api-service
    networks:
      - my-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: myuser
      RABBITMQ_DEFAULT_PASS: mypassword
    networks:
      - my-network
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s

networks:
  my-network:
